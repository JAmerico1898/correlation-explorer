import streamlit as st
import numpy as np
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Explorador de Correla√ß√£o", layout="wide")

# T√≠tulo e introdu√ß√£o
st.title("üìä Explorador Interativo de Correla√ß√£o")
st.markdown("""
    Descubra por que a correla√ß√£o nem sempre √© a melhor maneira de entender rela√ß√µes nos dados! 
    Esta ferramenta interativa mostra tr√™s casos importantes onde olhar apenas a correla√ß√£o pode nos enganar.
""")

# Fun√ß√µes auxiliares
def generate_correlated_data(correlation, n_points=150):
    """Gera dados correlacionados usando transforma√ß√£o Box-Muller"""
    x = np.random.normal(0, 1, n_points)
    eps = np.random.normal(0, 1, n_points)
    y = correlation * x + np.sqrt(1 - correlation**2) * eps
    return pd.DataFrame({'x': x, 'y': y})

def generate_curved_data(curvature=1.0, n_points=150):
    """Gera dados em formato de U"""
    x = np.random.uniform(-2, 2, n_points)
    noise = np.random.normal(0, 0.1, n_points)
    y = (curvature**2) * x**2 + noise - 2
    return pd.DataFrame({'x': x, 'y': y})

def generate_simpsons_data(slope_diff=-1, n_points=150):
    """Gera dados do paradoxo de Simpson"""
    # Grupo A
    n_a = n_points // 2
    x_a = np.random.uniform(0, 5, n_a)
    y_a = x_a + np.random.normal(0, 0.5, n_a)
    df_a = pd.DataFrame({'x': x_a, 'y': y_a, 'group': 'Grupo A'})
    
    # Grupo B
    n_b = n_points - n_a
    x_b = np.random.uniform(4, 9, n_b)
    y_b = slope_diff * (x_b - 4) + 5 + np.random.normal(0, 0.5, n_b)
    df_b = pd.DataFrame({'x': x_b, 'y': y_b, 'group': 'Grupo B'})
    
    return pd.concat([df_a, df_b])

# Abas para diferentes cen√°rios
tab1, tab2 = st.tabs(["Correla√ß√£o Linear", "Padr√µes N√£o-lineares"])

# Aba 1: Correla√ß√£o Linear
with tab1:
    st.header("1Ô∏è‚É£ Correla√ß√£o Linear")
    st.markdown("""
        Mova o controle deslizante para ver como diferentes valores de correla√ß√£o afetam o gr√°fico de dispers√£o.
        Note que mesmo com o mesmo alvo de correla√ß√£o, cada amostra aleat√≥ria parece ligeiramente diferente!
    """)
    
    col1, col2 = st.columns([1, 2])
    with col1:
        correlation = st.slider("Correla√ß√£o Alvo", -1.0, 1.0, 0.0, 0.1)
        if st.button("üé≤ Gerar Nova Amostra"):
            st.session_state.linear_data = generate_correlated_data(correlation)
    
    # Inicializar ou atualizar dados
    if 'linear_data' not in st.session_state:
        st.session_state.linear_data = generate_correlated_data(correlation)
    
    # Gr√°fico
    fig = px.scatter(st.session_state.linear_data, x='x', y='y', 
                     title=f"Correla√ß√£o da Amostra: {st.session_state.linear_data['x'].corr(st.session_state.linear_data['y']):.2f}")
    st.plotly_chart(fig, use_container_width=True)

# Aba 2: Padr√µes N√£o-lineares
with tab2:
    st.header("2Ô∏è‚É£ Padr√µes N√£o-lineares (A Forma de U)")
    st.markdown("""
        Aqui √© onde a correla√ß√£o pode nos enganar! Estes dados mostram um padr√£o claro em forma de U,
        mas a correla√ß√£o pode estar pr√≥xima de zero. Ajuste a curvatura para ver como o padr√£o muda.
    """)
    
    col1, col2 = st.columns([1, 2])
    with col1:
        curvature = st.slider("Curvatura", 0.1, 2.0, 1.0, 0.1)
        if st.button("üé≤ Gerar Nova Forma de U"):
            st.session_state.curved_data = generate_curved_data(curvature)
    
    # Inicializar ou atualizar dados
    if 'curved_data' not in st.session_state:
        st.session_state.curved_data = generate_curved_data(curvature)
    
    # Gr√°fico
    fig = px.scatter(st.session_state.curved_data, x='x', y='y',
                     title=f"Correla√ß√£o: {st.session_state.curved_data['x'].corr(st.session_state.curved_data['y']):.2f}")
    fig.update_layout(
        yaxis=dict(range=[-3, 8]),
        xaxis=dict(range=[-2.5, 2.5])
    )    
    st.plotly_chart(fig, use_container_width=True)
    
    st.info("üìå Mesmo havendo um padr√£o claro, a correla√ß√£o est√° pr√≥xima de zero! Isso mostra por que devemos sempre visualizar nossos dados.")


# Principais Conclus√µes
st.divider()
st.header("üéØ Principais Conclus√µes")
st.markdown("""
* üìä A correla√ß√£o mede apenas rela√ß√µes **lineares**
* üîÑ Uma forma de U perfeita pode ter correla√ß√£o zero apesar de um padr√£o claro
* üéØ Diferentes grupos nos seus dados podem mostrar padr√µes opostos
* üëÄ Sempre visualize seus dados - n√£o confie apenas em estat√≠sticas resumidas!
* ü§î Correla√ß√£o n√£o implica causalidade
""")

# Adicionar um rodap√© divertido
# Rodap√©
st.divider()
st.caption("2025 Ferramenta de Ensino de Correla√ß√£o | Desenvolvida para fins educacionais")
st.caption("Prof. Jos√© Am√©rico ‚Äî Coppead/UCAM")